import { RecipeGenerator } from '../src/generators/RecipeGenerator.js';

async function main() {
  try {
    console.log('üß™ Test du g√©n√©rateur de recettes');
    
    const generator = new RecipeGenerator();
    
    // Optionnel : on peut fournir un seed pour influencer la g√©n√©ration
    const options = {
      seed: 'Une recette v√©g√©tarienne simple avec des l√©gumes de saison'
    };
    
    const result = await generator.generateRecipe(options);
    
    console.log('\nüìù R√©sum√© de la recette g√©n√©r√©e :');
    console.log('----------------------------------------');
    console.log(`Nom : ${result.recipe.get('name')}`);
    console.log(`Description : ${result.recipe.get('description')}`);
    console.log(`Type : ${result.recipe.get('type')}`);
    console.log(`Difficult√© : ${result.recipe.get('difficulty')}`);
    console.log(`Temps de pr√©paration : ${result.recipe.get('preparationTime')} minutes`);
    console.log(`Temps de cuisson : ${result.recipe.get('bakingTime')} minutes`);
    console.log(`Portions : ${result.recipe.get('portions')}`);
    console.log(`Nutri-Score : ${result.recipe.get('nutriscore')}`);
    console.log('\nIngr√©dients :');
    result.ingredients.forEach(ing => {
      console.log(`- ${ing.quantity} ${ing.unit.get('name')} de ${ing.ingredient.get('name')}`);
    });
    
    if (result.missingIngredients.length > 0) {
      console.log('\n‚ö†Ô∏è Ingr√©dients manquants :');
      result.missingIngredients.forEach(ing => {
        console.log(`- ${ing.name} (${ing.reason})`);
      });
    }
    
    console.log('\n√âtapes :');
    result.steps.forEach(step => {
      console.log(`\n${step.get('order')}. ${step.get('text')}`);
      if (step.get('cookingTime')) {
        console.log(`   Temps : ${step.get('cookingTime')} minutes`);
      }
      if (step.get('temperature')) {
        console.log(`   Temp√©rature : ${step.get('temperature')}¬∞C`);
      }
      if (step.get('notes')) {
        console.log(`   Notes : ${step.get('notes')}`);
      }
    });
    
    console.log('\n‚úÖ Test termin√© avec succ√®s !');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test :', {
      message: error.message,
      code: error.code,
      stack: error.stack
    });
    process.exit(1);
  }
}

// Ex√©cution du test
main(); 